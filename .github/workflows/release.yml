name: Release

on:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        targets: [
          { os: ubuntu-latest },
          { os: macos-latest },
          { os: windows-2022 }
        ]
    runs-on: ${{ matrix.targets.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          key: gf3
      - name: Dependencies cache
        id: extcache
        uses: actions/cache@v3
        with:
          path: '${{ github.workspace }}/ext/'
          key: ${{ runner.os }}-gf-ext-3

      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers
          vulkan-use-cache: true

      - name: Force qml-video-rs rebuild (UNIX)
        if: ${{ matrix.targets.os != 'windows-2022' }}
        run: |
          rm -rf ${{ github.workspace }}/target/*/deploy/build/qml-video-rs*
          rm -rf ${{ github.workspace }}/target/deploy/build/qml-video-rs*
      - name: Force qml-video-rs rebuild (Win)
        if: ${{ matrix.targets.os == 'windows-2022' }}
        run: rm -r -force ${{ github.workspace }}/target/*/deploy/build/qml-video-rs* -ErrorAction SilentlyContinue

      - name: Install Mac certificate
        if: ${{ matrix.targets.os == 'macos-latest' }}
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PWD }}

      - uses: extractions/setup-just@v1

      - name: Build Gyroflow (macOS)
        if: ${{ matrix.targets.os == 'macos-latest' }}
        env:
          SIGNING_FINGERPRINT: ${{ secrets.MACOS_CERTIFICATE_FINGERPRINT }}
        run: |
          just install-deps
          just deploy universal
          npx notarize-cli --file ${{ github.workspace }}/_deployment/_binaries/Gyroflow-mac-universal.dmg --bundle-id xyz.gyroflow --asc-provider="${{ secrets.MACOS_TEAM }}" --username="${{ secrets.MACOS_ACCOUNT_USER }}" --password="${{ secrets.MACOS_ACCOUNT_PASS }}"
          xcrun stapler staple --verbose ${{ github.workspace }}/_deployment/_binaries/Gyroflow-mac-universal.dmg

      - name: Build Gyroflow (Linux)
        if: ${{ matrix.targets.os == 'ubuntu-latest' }}
        run: just deploy docker

      - name: Build Gyroflow (Windows)
        if: ${{ matrix.targets.os == 'windows-2022' }}
        run: |
          just install-deps
          just deploy

      - name: Save Binaries
        uses: actions/upload-artifact@v3
        with:
          name: gyroflow
          path: _deployment/_binaries/*.*

  github_release:
    name: Create GitHub release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: gyroflow

      - run: ls -l

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
         files: ./*
