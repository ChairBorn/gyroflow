[package]
name = "gyroflow-core"
version = "1.5.2"
authors = ["Adrian <adrian.eddy@gmail.com>", "Elvin Chen"]
edition = "2021"

[lib]
name = "gyroflow_core"
path = "lib.rs"

[dependencies]
#telemetry-parser = { path = "../../../telemetry-parser" }
telemetry-parser = { git = "https://github.com/AdrianEddy/telemetry-parser.git", rev = "40ba95a" }
#ahrs = { version = "0.5.0", features = ["field_access"] }
ahrs = { git = "https://github.com/jmagnuson/ahrs-rs.git", rev = "bf7b41d", features = ["field_access"] }

stabilize_spirv = { path = "./gpu/stabilize_spirv" }

#rs-sync = { path = "../../../rs-sync" }
rs-sync = { git = "https://github.com/gyroflow/rs-sync.git", rev = "c73bf47" }

mimalloc = { version = "0.1.39", default-features = false }
nalgebra = { version = "0.32", features = ["serde-serialize"] }
rayon = "1.8"
biquad = "0.4.2"
fastrand = "2.0.0"
lazy_static = "1.4.0"
parking_lot = "0.12.1"
bincode = "1.3.3"
serde = "1.0"
serde_json = "1.0"
crc32fast = "1.3.2"
byteorder = "1.4.3"
line_drawing = "1.0.0"
rand = "0.8.5"
time = { version = "0.3.29", features = ["local-offset"] }
itertools = "0.11.0"
num = "0.4.1"
base91 = "0.1.0"
bitflags = "2.4.0"
enum_delegate = "0.2.0"
simple-easing = "1.0.1"
half = "2.3.1"
lru = "0.11"
thiserror = "=1.0.48"
ciborium = "0.2.1"
nt-hive = "0.2"

dyn-clone = "1.0.14"

akaze = { version = "*", git = "https://github.com/rust-cv/cv.git", rev = "82a25ee", features = ["rayon"] }
eight-point = { version = "*", git = "https://github.com/rust-cv/cv.git", rev = "82a25ee" }
cv-pinhole = { version = "*", git = "https://github.com/rust-cv/cv.git", rev = "82a25ee" }
cv-core = { version = "*", git = "https://github.com/rust-cv/cv.git", rev = "82a25ee" }
sample-consensus = "1.0.2"
arrsac = "0.10.0"
rand_xoshiro = "0.6.0"
image = "0.24"
space = { version = "0.17", features = ["alloc"] }
bitarray = { version = "0.9", features = ["space"] }
enterpolation = "0.2.1"
libloading = "0.8"
libc = "0.2"

opencv = { version = "0.84", features = ["clang-runtime"], optional = true }

wgpu       = { git = "https://github.com/gfx-rs/wgpu.git", rev = "e63b0f6", features = ["spirv"] }
wgpu-hal   = { git = "https://github.com/gfx-rs/wgpu.git", rev = "e63b0f6" }
wgpu-types = { git = "https://github.com/gfx-rs/wgpu.git", rev = "e63b0f6" }
wgpu-core  = { git = "https://github.com/gfx-rs/wgpu.git", rev = "e63b0f6" }
bytemuck = "1.14.0"
ash = "0.37.3"
naga = { git = "https://github.com/gfx-rs/naga", rev = "6668d0694cc51ee66c71c2ca3a1ab1081956299b", version = "0.13.0", features = ["clone", "span", "validate", "spv-in"] }

pollster = "0.3.0"
futures-intrusive = "0.5.0"
flate2 = "1.0.27"
walkdir = "2.4.0"
url = "2.4.1"
urlencoding = "2.1.3"

log = "0.4"

ocl = { version = "0.19.4", optional = true, git = "https://github.com/cogciprocate/ocl" }
ocl-interop = { version = "0.1.5", optional = true, git = "https://github.com/cogciprocate/ocl" }

rustfft = "6.1.0"

include_dir = { version = "0.7.3", features = ["glob"] }

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
metal = { git = "https://github.com/gfx-rs/metal-rs/", rev = "d24f1a4" }
objc-foundation = "0.1.1"
core-foundation-sys = "0.8.4"

[target.'cfg(target_os = "windows")'.dependencies.windows]
version = "0.51.1"
features = [ "Win32_System_Com", "Win32_System_Console", "Win32_System_SystemServices", "Win32_UI_Shell", "Win32_Foundation", "Wdk_Foundation", "Win32_System_LibraryLoader",
             "Win32_Graphics_Dwm", "Win32_Graphics_Direct3D", "Win32_Graphics_Direct3D11", "Win32_Graphics_Dxgi_Common", "Win32_Graphics_Dxgi",
             "Win32_Security", "Win32_Security_Authorization", "Win32_System_WindowsProgramming", "Win32_System_Threading", "Win32_System_Registry" ]
[target.'cfg(target_os = "windows")'.dependencies.winapi]
version = "0.3"
features = ["profileapi", "libloaderapi", "windef", "winuser", "dcomp"]
[target.'cfg(target_os = "windows")'.dependencies.d3d12]
version = "0.7.0"
features = ["libloading"]

[features]
default = []
use-opencl = ["ocl", "ocl-interop"]
use-opencv = ["opencv"]
bundle-lens-profiles = []

[profile.deploy]
inherits = "release"
lto = true
codegen-units = 1

[profile.profile]
inherits = "release"
debug = true

[target.'cfg(target_os = "android")'.dependencies]
jni = "0.21"
ndk = { version = "0.7", features = ["media", "api-level-26"] }
ndk-sys = { version = "0.4.1" }
ndk-context = { version = "0.1.1" }